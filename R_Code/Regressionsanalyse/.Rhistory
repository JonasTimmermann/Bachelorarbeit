library(chron)
library(clipr)
library(covr)
library(crayon)
library(dbplyr)
library(devtools)
library(dplyr)
library(easyGgplot2)
library(evaluate)
library(ggthemes)
library(httr)
library(openxlsx)
library(pacman)
library(plotly)
library(plogr)
library(plyr)
library(readxl)
library(rlang)
library(selectr)
library(stringr)
library(sys)
library(tidyr)
library(tibble)
library(tidyselect)
library(tidyverse)
library(utf8)
library(xml2)
library(yaml)
library("readxl")
library("writexl")
library(devtools)
library(easyGgplot2)
library(tibble)
library(RColorBrewer)
library(lubridate)
library(devtools)
library(easyGgplot2)
library(plyr)
library(ggplot2)
library(dplyr)
library(hrbrthemes)
library(RColorBrewer)
coul <- brewer.pal(8, "Set2")
library(wesanderson)
suppressPackageStartupMessages(library(tidyverse))
data <- load("BBBClub.rda")
load("BBBClub.rda")
BBBClub <- read.csv2("BBBClub.csv")
mydata <- read.csv("https://stats.idre.ucla.edu/stat/data/binary.csv")
View(mydata)
summary(mydata)
sapply(mydata)
sapply(mydata, sd)
xtabs(~admit + rank, data = mydata)
xtabs(~admit + gpa, data = mydata)
xtabs(~admit + rank, data = mydata)
mydata$rank <- factor(mydata$rank)
summary(mylogit)
mydata$rank <- factor(mydata$rank) # Convert rank to categorical variable
mylogit <- glm(admit ~ gre + gpa + rank, data = mydata, family = "binomial") # Logistische Regression anwenden
summary(mylogit)
View(mylogit)
library(aod)
library(ggplot2)
install.packages("aod")
library(aod)
library(ggplot2)
summary(mylogit)
confint(mylogit)
confint.default(mylogit) # CIs using standard errors
wald.test(b = coef(mylogit), Sigma = vcov(mylogit), Terms = 4:6)
l <- cbind(0, 0, 0, 1, -1, 0)
wald.test(b = coef(mylogit), Sigma = vcov(mylogit), L = l)
exp(coef(mylogit))
exp(cbind(OR = coef(mylogit), confint(mylogit)))
newdata1 <- with(mydata, data.frame(gre = mean(gre), gpa = mean(gpa), rank = factor(1:4)))
## view data frame
newdata1
newdata1$rankP <- predict(mylogit, newdata = newdata1, type = "response")
newdata1
newdata1$rankP <- predict(mylogit, newdata = newdata1, type = "response")
newdata1  # shows predicted probability (ranP) being acceptet by the Uni (Rank 1 is most likely [52%])
# Further Prediction with various gre, gpa
newdata2 <- with(mydata, data.frame(gre = rep(seq(from = 200, to = 800, length.out = 100),
4), gpa = mean(gpa), rank = factor(rep(1:4, each = 100))))
newdata3 <- cbind(newdata2, predict(mylogit, newdata = newdata2, type = "link",
se = TRUE))
newdata3 <- within(newdata3, {
PredictedProb <- plogis(fit)
LL <- plogis(fit - (1.96 * se.fit))
UL <- plogis(fit + (1.96 * se.fit))
})
## view first few rows of final dataset
head(newdata3)
View(newdata3)
# Plot the "Prediction probabilities"
ggplot(newdata3, aes(x = gre, y = PredictedProb)) + geom_ribbon(aes(ymin = LL,
ymax = UL, fill = rank), alpha = 0.2) + geom_line(aes(colour = rank),
size = 1)
# Plot the "Prediction probabilities"
ggplot(newdata3, aes(x = gre, y = PredictedProb)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = rank), alpha = 0.2)
# Plot the "Prediction probabilities"
ggplot(newdata3, aes(x = gre, y = PredictedProb)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = rank), alpha = 0.2) +
geom_line(aes(colour = rank),
size = 1)
# Freiheitsgrade
with(mylogit, null.deviance - deviance) # chi-square of 41.46    # model with predictors fits significantly better than a model with just an intercept (i.e., a null model). The test statistic is the difference between the residual deviance for the model with predictors and the null model.
with(mylogit, df.null - df.residual) # 5 degrees of freedom      # number of predictor variables
with(mylogit, pchisq(null.deviance - deviance, df.null - df.residual, lower.tail = FALSE)) #p-value of less than 0.001
# chi-square of 41.46 with 5 degrees of freedom and an associated
# p-value of less than 0.001 tells us that our model as a whole fits significantly better
# than an empty model.
logLik(mylogit) # To see the modelâ€™s log likelihood
Data <- PriorisierungMitDemo[!(is.na(PriorisierungMitDemo$Gender) | PriorisierungMitDemo$Gender ==""), ]
library("readxl")
library("writexl")
library(devtools)
library(easyGgplot2)
library(tibble)
library(RColorBrewer)
library(lubridate)
library(devtools)
library(easyGgplot2)
library(plyr)
library(ggplot2)
library(dplyr)
library(hrbrthemes)
library(RColorBrewer)
coul <- brewer.pal(8, "Set2")
library(wesanderson)
suppressPackageStartupMessages(library(tidyverse))
demografische_Daten <- read_excel("C:/Users/Jonas/Desktop/Relevanzwahrnehmung_demografische_Daten_Date_chenged.xlsx")
prioriseriungs_Daten <- read_excel("C:/Users/Jonas/Desktop/Relevanzwahrnehmung_Priorisierung.xlsx")
View(demografische_Daten)
View(prioriseriungs_Daten)
time <- times(strftime(prioriseriungs_Daten, tz="UTC", format='%Y%m%d:%H:%M:%S'))
View(time)
prioriseriungs_Daten$`Timestamp (HH-MM-SS)` <- format(parse_date_time(prioriseriungs_Daten$`Timestamp (HH-MM-SS)`, c("HMS", "HM"), tz = "GMT"), "%H:%M:%S")
install.packages("chron")
library(chron)
time <- times(strftime(prioriseriungs_Daten, tz="UTC", format='%Y%m%d:%H:%M:%S'))
View(time)
prioriseriungs_Daten$`Timestamp (HH-MM-SS)` = time
prioriseriungs_Daten$`Timestamp (HH-MM-SS)` <- format(parse_date_time(prioriseriungs_Daten$`Timestamp (HH-MM-SS)`, c("HMS", "HM"), tz = "GMT"), "%H:%M:%S")
View(prioriseriungs_Daten)
View(time)
prioriseriungs_Daten <- read_excel("C:/Users/Jonas/Desktop/Relevanzwahrnehmung_Priorisierung.xlsx")
prioriseriungs_Daten <- as.POSIXct(prioriseriungs_Daten$`Timestamp (HH-MM-SS)`, format="%H:%M:%S", tz="UTC")
time <- times(strftime(prioriseriungs_Daten, tz="UTC", format='%Y%m%d:%H:%M:%S'))
View(time)
prioriseriungs_Daten$`Timestamp (HH-MM-SS)` = time
prioriseriungs_Daten$`Timestamp (HH-MM-SS)` <- format(parse_date_time(prioriseriungs_Daten$`Timestamp (HH-MM-SS)`, c("HMS", "HM"), tz = "GMT"), "%H:%M:%S")
View(prioriseriungs_Daten)
prioriseriungs_Daten <- read_excel("C:/Users/Jonas/Desktop/Relevanzwahrnehmung_Priorisierung.xlsx")
time <- times(strftime(prioriseriungs_Daten, tz="UTC", format="%H:%M:%S"))
time <- times(strftime(prioriseriungs_Daten, tz="UTC", format='%Y%m%d:%H:%M:%S'))
format(parse_date_time(time, c("HMS", "HM"), tz = "UTC"), "%H:%M:%S")
prioriseriungs_Daten <- read_excel("C:/Users/Jonas/Desktop/Relevanzwahrnehmung_Priorisierung.xlsx")
format(parse_date_time(time, c("HMS", "HM"), tz = "UTC"), "%H:%M:%S")
time <- times(strftime(prioriseriungs_Daten, tz="UTC", format="%H:%M:%S"))
format(parse_date_time(time, c("HMS", "HM"), tz = "UTC"), "%H:%M:%S")
time <- times(strftime(prioriseriungs_Daten, tz="UTC", format='%Y%m%d:%H:%M:%S'))
format(parse_date_time(time, c("HMS", "HM"), tz = "UTC"), "%H:%M:%S")
View(time)
prioriseriungs_Daten$`Timestamp (HH-MM-SS)` = time
prioriseriungs_Daten$`Timestamp (HH-MM-SS)` <- format(parse_date_time(prioriseriungs_Daten$`Timestamp (HH-MM-SS)`, c("HMS", "HM"), tz = "GMT"), "%H:%M:%S")
View(prioriseriungs_Daten)
prioriseriungs_Daten <- read_excel("C:/Users/Jonas/Desktop/Relevanzwahrnehmung_Priorisierung.xlsx")
prioriseriungs_Daten$`Timestamp (HH-MM-SS)` <- as.POSIXct(prioriseriungs_Daten$`Timestamp (HH-MM-SS)`, format='%Y/%m/%d %H:%M:%S')
time <- times(strftime(prioriseriungs_Daten, tz="UTC", format="%H:%M:%S"))
format(parse_date_time(time, c("HMS", "HM"), tz = "UTC"), "%H:%M:%S")
time <- times(strftime(prioriseriungs_Daten, tz="UTC", format='%Y%m%d:%H:%M:%S'))
View(time)
prioriseriungs_Daten$`Timestamp (HH-MM-SS)` = time
prioriseriungs_Daten$`Timestamp (HH-MM-SS)` <- format(parse_date_time(prioriseriungs_Daten$`Timestamp (HH-MM-SS)`, c("HMS", "HM"), tz = "GMT"), "%H:%M:%S")
View(prioriseriungs_Daten)
prioriseriungs_Daten <- read_excel("C:/Users/Jonas/Desktop/Relevanzwahrnehmung_Priorisierung.xlsx")
prioriseriungs_Daten$`Timestamp (HH-MM-SS)` <- as.POSIXct(prioriseriungs_Daten$`Timestamp (HH-MM-SS)`, format = '%H:%M:%S')
View(prioriseriungs_Daten)
time <- times(strftime(prioriseriungs_Daten, tz="UTC", format='%Y%m%d:%H:%M:%S'))
format(parse_date_time(time, c("HMS", "HM"), tz = "UTC"), "%H:%M:%S")
time <- times(strftime(prioriseriungs_Daten, tz="UTC", format='%Y%m%d:%H:%M:%S'))
prioriseriungs_Daten$`Timestamp (HH-MM-SS)` = time
prioriseriungs_Daten$`Timestamp (HH-MM-SS)` <- format(parse_date_time(prioriseriungs_Daten$`Timestamp (HH-MM-SS)`, c("HMS", "HM"), tz = "GMT"), "%H:%M:%S")
View(prioriseriungs_Daten)
prioriseriungs_Daten <- read_excel("C:/Users/Jonas/Desktop/Relevanzwahrnehmung_Priorisierung.xlsx")
prioriseriungs_Daten$`Timestamp (HH-MM-SS)` <- as.POSIXct(prioriseriungs_Daten$`Timestamp (HH-MM-SS)`, format = '%d%b%Y:%H:%M:%S')
time <- times(strftime(prioriseriungs_Daten, tz="UTC", format='%Y%m%d:%H:%M:%S'))
format(parse_date_time(time, c("HMS", "HM"), tz = "UTC"), "%H:%M:%S")
time <- times(strftime(prioriseriungs_Daten, tz="UTC", format='%Y%m%d:%H:%M:%S'))
time <- times(strftime(prioriseriungs_Daten, tz="UTC", format="%H:%M:%S"))
prioriseriungs_Daten <- as.POSIXct(prioriseriungs_Daten$`Timestamp (HH-MM-SS)`, format="%H:%M:%S", tz="UTC")
prioriseriungs_Daten <- as.POSIXct(prioriseriungs_Daten$`Timestamp (HH-MM-SS)`, format="%H:%M:%S", tz="UTC")
time <- times(strftime(prioriseriungs_Daten, tz="UTC", format="%H:%M:%S"))
View(time)
prioriseriungs_Daten$`Timestamp (HH-MM-SS)` = time
prioriseriungs_Daten$`Timestamp (HH-MM-SS)` <- format(parse_date_time(prioriseriungs_Daten$`Timestamp (HH-MM-SS)`, c("HMS", "HM"), tz = "GMT"), "%H:%M:%S")
View(prioriseriungs_Daten)
prioriseriungs_Daten <- read_excel("C:/Users/Jonas/Desktop/Relevanzwahrnehmung_Priorisierung.xlsx")
prioriseriungs_Daten$`Timestamp (HH-MM-SS)` <- as.POSIXct(prioriseriungs_Daten$`Timestamp (HH-MM-SS)`, format='%Y/%m/%d %H:%M:%S')
prioriseriungs_Daten <- as.POSIXct(prioriseriungs_Daten$`Timestamp (HH-MM-SS)`, format="%H:%M:%S", tz="UTC")
time <- times(strftime(prioriseriungs_Daten, tz="UTC", format='%Y%m%d:%H:%M:%S'))
prioriseriungs_Daten <- read_excel("C:/Users/Jonas/Desktop/Relevanzwahrnehmung_Priorisierung.xlsx")
prioriseriungs_Daten <- as.POSIXct(prioriseriungs_Daten$`Timestamp (HH-MM-SS)`, format="%H:%M:%S", tz="UTC")
View(prioriseriungs_Daten)
demografische_Daten <- read_excel("C:/Users/Jonas/Desktop/Relevanzwahrnehmung_demografische_Daten_Date_chenged.xlsx")
prioriseriungs_Daten <- read_excel("C:/Users/Jonas/Desktop/Relevanzwahrnehmung_Priorisierung.xlsx")
View(prioriseriungs_Daten)
prioriseriungs_Daten <- read_excel("C:/Users/Jonas/Desktop/Relevanzwahrnehmung_Priorisierung.xlsx")
prioriseriungs_Daten_mit_Zeiten <- read_excel("C:/Users/Jonas/Desktop/Prio/Priorisierungsdaten_Mit_Time_Intervall.xlsx")
View(prioriseriungs_Daten_mit_Zeiten) #2068
View(prioriseriungs_Daten)
ersteFrageSpalte = prioriseriungs_Daten[prioriseriungs_Daten$Question_No == 1,]
View(ersteFrageSpalte)
kpp = unique(ersteFrageSpalte$Response_ID)
View(kpp)
kpp = unique(demografische_Daten$Response_ID)
demografische_Daten <- read_excel("C:/Users/Jonas/Desktop/Relevanzwahrnehmung_demografische_Daten_Date_chenged.xlsx")
View(demografische_Daten)
kpp = unique(demografische_Daten$Respondent_ID)
View(kpp)
kpp = unique(ersteFrageSpalte$Respondent_ID)
View(kpp)
demoShort<- subset(demografische_Daten, Respondent_ID %in% ersteFrageSpalte$Respondent_ID)
View(demoShort)
demoShort$Prio1 = ersteFrageSpalte$PubIDs_Order_Chosen
View(demoShort)
demoShort$Prio2 = rev(ersteFrageSpalte$PubIDs_Order_Chosen)
View(demoShort)
i <- 23
while (i < 1075){
demoShort$Prio2[demoShort$Respondent_ID == i] <- "b"
i = i + 1
}
View(demoShort)
i <- 23
while (i < 1075){
demoShort$Prio2[demoShort$Respondent_ID == i] <- prioriseriungs_Daten$PubIDs_Order_Chosen[prioriseriungs_Daten$Respondent_ID == i]
i = i + 1
}
View(demoShort)
ersteFrageSpalte = prioriseriungs_Daten[prioriseriungs_Daten$Question_No == 1,]
zweiteFrageSpalte = prioriseriungs_Daten[prioriseriungs_Daten$Question_No == 2,]
dritteFrageSpalte = prioriseriungs_Daten[prioriseriungs_Daten$Question_No == 3,]
demoDatenDer1Frage <- subset(demografische_Daten, Respondent_ID %in% ersteFrageSpalte$Respondent_ID)
demoDatenDer2Frage <- subset(demografische_Daten, Respondent_ID %in% zweiteFrageSpalte$Respondent_ID)
demoDatenDer3Frage <- subset(demografische_Daten, Respondent_ID %in% dritteFrageSpalte$Respondent_ID)
demografische_Daten$Question1 = rev(ersteFrageSpalte$PubIDs_Order_Chosen)
demografische_Daten$Question2 = rev(ersteFrageSpalte$PubIDs_Order_Chosen)
demografische_Daten$Question3 = rev(ersteFrageSpalte$PubIDs_Order_Chosen)
i <- 23
while (i < 1075){
demografische_Daten$Question1[demografische_Daten$Respondent_ID == i] <- ersteFrageSpalte$PubIDs_Order_Chosen[ersteFrageSpalte$Respondent_ID == i]
demografische_Daten$Question2[demografische_Daten$Respondent_ID == i] <- zweiteFrageSpalte$PubIDs_Order_Chosen[zweiteFrageSpalte$Respondent_ID == i]
demografische_Daten$Question3[demografische_Daten$Respondent_ID == i] <- dritteFrageSpalte$PubIDs_Order_Chosen[dritteFrageSpalte$Respondent_ID == i]
i = i + 1
}
demografische_Daten$Question1 = rev(ersteFrageSpalte$PubIDs_Order_Chosen)
demografische_Daten$Question1 = rev(demografische_Daten$Gender)
demografische_Daten$Question2 = rev(demografische_Daten$Gender)
demografische_Daten$Question3 = rev(demografische_Daten$Gender)
i <- 23
while (i < 1075){
demografische_Daten$Question1[demografische_Daten$Respondent_ID == i] <- ersteFrageSpalte$PubIDs_Order_Chosen[ersteFrageSpalte$Respondent_ID == i]
demografische_Daten$Question2[demografische_Daten$Respondent_ID == i] <- zweiteFrageSpalte$PubIDs_Order_Chosen[zweiteFrageSpalte$Respondent_ID == i]
demografische_Daten$Question3[demografische_Daten$Respondent_ID == i] <- dritteFrageSpalte$PubIDs_Order_Chosen[dritteFrageSpalte$Respondent_ID == i]
i = i + 1
}
View(ersteFrageSpalte)
demografische_Daten$Question1 = rev(demografische_Daten$Respondent_ID)
demografische_Daten$Question2 = rev(demografische_Daten$Respondent_ID)
demografische_Daten$Question3 = rev(demografische_Daten$Respondent_ID)
i <- 23
while (i < 1075){
demografische_Daten$Question1[demografische_Daten$Respondent_ID == i] <- ersteFrageSpalte$PubIDs_Order_Chosen[ersteFrageSpalte$Respondent_ID == i]
demografische_Daten$Question2[demografische_Daten$Respondent_ID == i] <- zweiteFrageSpalte$PubIDs_Order_Chosen[zweiteFrageSpalte$Respondent_ID == i]
demografische_Daten$Question3[demografische_Daten$Respondent_ID == i] <- dritteFrageSpalte$PubIDs_Order_Chosen[dritteFrageSpalte$Respondent_ID == i]
i = i + 1
}
View(demografische_Daten)
View(ersteFrageSpalte)
demografische_Daten$Question1 = demografische_Daten$Respondent_ID
demografische_Daten$Question2 = demografische_Daten$Respondent_ID
demografische_Daten$Question3 = demografische_Daten$Respondent_ID
View(demografische_Daten)
i <- 23
while (i < 1075){
demografische_Daten$Question1[demografische_Daten$Respondent_ID == i] <- ersteFrageSpalte$PubIDs_Order_Chosen[ersteFrageSpalte$Respondent_ID == i]
demografische_Daten$Question2[demografische_Daten$Respondent_ID == i] <- zweiteFrageSpalte$PubIDs_Order_Chosen[zweiteFrageSpalte$Respondent_ID == i]
demografische_Daten$Question3[demografische_Daten$Respondent_ID == i] <- dritteFrageSpalte$PubIDs_Order_Chosen[dritteFrageSpalte$Respondent_ID == i]
i = i + 1
}
View(demografische_Daten)
View(ersteFrageSpalte)
priorisierung_beantwortet_1_3 <- read_excel("C:/Users/Jonas/Desktop/Prio/Priorisierungsdaten_BearbeitungszeitOOO_1_3.xlsx")
kpp = unique(priorisierung_beantwortet_1_3$Respondent_ID)
View(kpp)
View(priorisierung_beantwortet_1_3)
demoDatenDerPriorisierungen <- subset(demografische_Daten, Respondent_ID %in% priorisierung_beantwortet_1_3$Respondent_ID)
View(demoDatenDerPriorisierungen)
demografische_Daten$Question1 = demografische_Daten$Respondent_ID
demografische_Daten$Question2 = demografische_Daten$Respondent_ID
demografische_Daten$Question3 = demografische_Daten$Respondent_ID
View(demografische_Daten)
demoDatenDerPriorisierungen$Question1 = demografische_Daten$Respondent_ID
demoDatenDerPriorisierungen$Question2 = demografische_Daten$Respondent_ID
demoDatenDerPriorisierungen$Question3 = demografische_Daten$Respondent_ID
demoDatenDerPriorisierungen$Question1 = demoDatenDerPriorisierungen$Respondent_ID
demoDatenDerPriorisierungen$Question2 = demoDatenDerPriorisierungen$Respondent_ID
demoDatenDerPriorisierungen$Question3 = demoDatenDerPriorisierungen$Respondent_ID
View(demoDatenDerPriorisierungen)
i <- 23
while (i < 1075){
demoDatenDerPriorisierungen$Question1[demoDatenDerPriorisierungen$Respondent_ID == i] <- ersteFrageSpalte$PubIDs_Order_Chosen[ersteFrageSpalte$Respondent_ID == i]
demoDatenDerPriorisierungen$Question2[demoDatenDerPriorisierungen$Respondent_ID == i] <- zweiteFrageSpalte$PubIDs_Order_Chosen[zweiteFrageSpalte$Respondent_ID == i]
demoDatenDerPriorisierungen$Question3[demoDatenDerPriorisierungen$Respondent_ID == i] <- dritteFrageSpalte$PubIDs_Order_Chosen[dritteFrageSpalte$Respondent_ID == i]
i = i + 1
}
View(demoDatenDerPriorisierungen)
demoDatenDerPriorisierungen_ohne_NA <- demoDatenDerPriorisierungen[!(is.na(demoDatenDerPriorisierungen$Gender) | demoDatenDerPriorisierungen$Gender ==""), ]
demoDatenDerPriorisierungen_ohne_NA <- demoDatenDerPriorisierungen[!(is.na(demoDatenDerPriorisierungen$Education) | demoDatenDerPriorisierungen$Education ==""), ]
View(demoDatenDerPriorisierungen_ohne_NA)
demoDatenDerPriorisierungen_ohne_NA <- demoDatenDerPriorisierungen[!(is.na(demoDatenDerPriorisierungen$Birthyear) | demoDatenDerPriorisierungen$Birthyear == 0), ]
View(demoDatenDerPriorisierungen_ohne_NA)
demoDatenDerPriorisierungen <- subset(demografische_Daten, Respondent_ID %in% priorisierung_beantwortet_1_3$Respondent_ID)
demoDatenDerPriorisierungen$Question1 = demoDatenDerPriorisierungen$Respondent_ID
demoDatenDerPriorisierungen$Question2 = demoDatenDerPriorisierungen$Respondent_ID
demoDatenDerPriorisierungen$Question3 = demoDatenDerPriorisierungen$Respondent_ID
i <- 23
while (i < 1075){
demoDatenDerPriorisierungen$Question1[demoDatenDerPriorisierungen$Respondent_ID == i] <- ersteFrageSpalte$PubIDs_Order_Chosen[ersteFrageSpalte$Respondent_ID == i]
demoDatenDerPriorisierungen$Question2[demoDatenDerPriorisierungen$Respondent_ID == i] <- zweiteFrageSpalte$PubIDs_Order_Chosen[zweiteFrageSpalte$Respondent_ID == i]
demoDatenDerPriorisierungen$Question3[demoDatenDerPriorisierungen$Respondent_ID == i] <- dritteFrageSpalte$PubIDs_Order_Chosen[dritteFrageSpalte$Respondent_ID == i]
i = i + 1
}
demoDatenDerPriorisierungen_ohne_NA <- demoDatenDerPriorisierungen[!(is.na(demoDatenDerPriorisierungen$Gender) | demoDatenDerPriorisierungen$Gender ==""), ]
demoDatenDerPriorisierungen_ohne_NA <- demoDatenDerPriorisierungen[!(is.na(demoDatenDerPriorisierungen$Education) | demoDatenDerPriorisierungen$Education ==""), ]
View(demoDatenDerPriorisierungen_ohne_NA)
demoDatenDerPriorisierungen <- subset(demografische_Daten, Respondent_ID %in% priorisierung_beantwortet_1_3$Respondent_ID)
demoDatenDerPriorisierungen$Question1 = demoDatenDerPriorisierungen$Respondent_ID
demoDatenDerPriorisierungen$Question2 = demoDatenDerPriorisierungen$Respondent_ID
demoDatenDerPriorisierungen$Question3 = demoDatenDerPriorisierungen$Respondent_ID
i <- 23
while (i < 1075){
demoDatenDerPriorisierungen$Question1[demoDatenDerPriorisierungen$Respondent_ID == i] <- ersteFrageSpalte$PubIDs_Order_Chosen[ersteFrageSpalte$Respondent_ID == i]
demoDatenDerPriorisierungen$Question2[demoDatenDerPriorisierungen$Respondent_ID == i] <- zweiteFrageSpalte$PubIDs_Order_Chosen[zweiteFrageSpalte$Respondent_ID == i]
demoDatenDerPriorisierungen$Question3[demoDatenDerPriorisierungen$Respondent_ID == i] <- dritteFrageSpalte$PubIDs_Order_Chosen[dritteFrageSpalte$Respondent_ID == i]
i = i + 1
}
demoDatenDerPriorisierungen_ohne_NA <- demoDatenDerPriorisierungen[!(is.na(demoDatenDerPriorisierungen$Gender) | demoDatenDerPriorisierungen$Gender ==""), ]
demoDatenDerPriorisierungen_ohne_NA <- demoDatenDerPriorisierungen_ohne_NA[!(is.na(demoDatenDerPriorisierungen_ohne_NA$Education) | demoDatenDerPriorisierungen_ohne_NA$Education ==""), ]
View(demoDatenDerPriorisierungen_ohne_NA)
demoDatenDerPriorisierungen_ohne_NA <- demoDatenDerPriorisierungen_ohne_NA[!(is.na(demoDatenDerPriorisierungen_ohne_NA$Birthyear) | demoDatenDerPriorisierungen_ohne_NA$Birthyear == 0), ]
View(demoDatenDerPriorisierungen_ohne_NA) # 325
demoDatenDerPriorisierungen_ohne_NA$Birthyear = 2019 - demoDatenDerPriorisierungen_ohne_NA$Birthyear
View(demoDatenDerPriorisierungen_ohne_NA) # 312
colnames(demoDatenDerPriorisierungen_ohne_NA$Birthyear) <- "Alter"
names(demoDatenDerPriorisierungen_ohne_NA)[6] <- "Alter"
View(demoDatenDerPriorisierungen_ohne_NA) # 312
write_xlsx(demoDatenDerPriorisierungen_ohne_NA, "C:/Users/Jonas/Desktop/Prio/logistische_Regressionsanalyse/demografische_UND_Priorisierungen_ohne_NA.xlsx")
write_xlsx(demoDatenDerPriorisierungen, "C:/Users/Jonas/Desktop/Prio/logistische_Regressionsanalyse/demografische_UND_Priorisierungen_mit_NA.xlsx")
